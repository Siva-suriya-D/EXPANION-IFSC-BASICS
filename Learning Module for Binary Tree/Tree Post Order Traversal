Post order traversal is a depth first traversal technique where the nodes are visited in the following order: (Left, Right, Root)

For example:

             1
          /      \
        /         \
      2           3
     /   \         /  \
   4    5      6   7

Post order traversal output: 4 5 2 6 7 3 1

Given a binary tree with positive integer values, find the postorder traversal of the tree and print them with all the values of leaf nodes incremented by 1

Expected output:  5 6 2 7 8 3 1

The structure of Node is
struct Node {
	int nodeValue;
	struct Node * lChild;
	struct Node * rChild;
};
JAVA
public class Node {
	public int nodeValue;
	public Node lChild;
	public Node rChild;
}


code://///////////////////////////

import com.expanion.code.evalution.Node;
import java.util.*;
public class Answer implements QuestionInterface {
	
	public static ArrayList<Integer> a = new ArrayList();
	
	public int[] func(Node root)
	{   
	    a.clear();
        postOrder(root);
        
        if(showArray().length > 0) {
            return showArray();
        } else return null;
    }
    
    public int[] showArray() {
        int n = a.size(), i;
        int arr[] = new int[n];
        for(i = 0; i < n; i++) {
            arr[i] = a.get(i);
        }
        return arr;
    }
    
    public void postOrder(Node node) {
        if(node == null) return;
        
        postOrder(node.lChild);
        
        postOrder(node.rChild);
        if(node.rChild == null && node.lChild == null) a.add(node.nodeValue + 1);
        else
        a.add(node.nodeValue);
    }
    
}
